{"version":3,"sources":["index.js"],"names":["Success","props","spans","i","push","className","runAmin","emoji","class","Toggle","onOff","onClick","sendSwitchState","switchId","showAnim","Sun","size","status","Win","showHide","winHide","winOnClick","Footer","List","items","useState","Array","length","fill","switchsState","setSwitchState","successOnOff","setSuccessOnOff","setRunAnim","screen","setScreen","setSize","listHide","setListHide","ons","map","x","bgStyle","filter","Boolean","toFixed","val","switchs","slice","setTimeout","style","console","log","item","href","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c0de6e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n\n  let spans = []\n  const numSpans = 10;\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(<span className={'single-success ' + 'anim-num-' + i + ' ' + props.runAmin}>{props.emoji}</span>);\n  }\n\n  return(\n    <div className = {'success ' + props.class}>\n      <div className = 'success-wrapper'>\n          {spans}\n      </div>\n    </div>\n  )\n}\n\nfunction Toggle(props) {\n\n  return (\n    <div>\n      <div className=\"switch-wrapper\">\n        <div className={\"switch switch-\" + props.onOff}>\n          <div className={\"circle \" + props.onOff}>\n            <button\n              className={props.onOff + ' noselect'}\n              onClick={() => {\n                if (props.onOff === \"on\") {\n                  props.sendSwitchState(props.switchId, 'off')\n                }\n                else {\n                  props.sendSwitchState(props.switchId, 'on')\n                  props.showAnim(props.switchId)\n                }\n              }}\n            >\n              {props.emoji}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Sun(props){\n  const size = props.status\n  return (\n    <div className={'sun ' + size} >\n      <div className='sun small'></div>\n    </div>\n  )\n}\n\nfunction Win(props) {\n\n  let showHide = ''\n  if(props.winHide == 'win'){showHide = 'show' } else {showHide = 'hide'}\n\n  return(\n    <div className={'win win-' + showHide }>\n      <div className = 'win-content'>\n        <div className ='title'>\n          <h1 className='main-icon'>üêì</h1>\n          <h1>Good Morning!</h1>\n        </div>\n        <button onClick = {props.winOnClick}>Start</button>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nfunction List(props) {\n  \n  const items = [\"üí©\", \"üëñ\", \"üëï\", \"üò¨\", \"üëü\", \"üß•\"];\n  const [switchsState, setSwitchState] = useState(Array(items.length).fill('off'))\n  const [successOnOff, setSuccessOnOff] = useState(['off','‚ù§Ô∏è']);\n  const [runAmin, setRunAnim] = useState('') \n  const [screen, setScreen] = useState('win')\n  const [size, setSize] = useState('sun-win');\n  const [listHide, setListHide] = useState('list-hide');\n\n// Setting the background acourding to the switches\n  const ons = switchsState.map(x =>(x == 'on'))\n  const background = (ons.filter(Boolean).length/items.length*100).toFixed(1)\n  const bgStyle = {\n    'background-image' : 'linear-gradient(135deg, #00adff 0%, #009be4 ' + background +'%)'  \n  }\n\n// On switch change\n  const sendSwitchState = (i,val) => {\n    // pass the value from the switch to the list\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs)\n\n    // Switch to \"Win\" mode when all switchs are On\n    if(val == 'on' && ons.filter(Boolean).length == (items.length-1)) {\n\n      setTimeout(() => {\n        setScreen('win')\n        setSize('sun-win')\n      },900)\n      \n      setTimeout(() => {\n        setListHide('list-hide')\n      },1000)\n    };\n  }\n\n  const showAnim = (i) => {\n    setSuccessOnOff(['on',items[i]])\n    setTimeout(() => {\n      setRunAnim('run-anim')\n    },10)\n    setTimeout(() => {\n      setSuccessOnOff(['off',items[i]])\n      setRunAnim('')\n    }, 3000);\n  }\n\n  const winOnClick = () => {\n    setScreen('game')\n    setListHide('show')\n    setSize('sun')\n    setSwitchState(Array(items.length).fill('off'))\n    console.log('switchsState is ' + switchsState)\n  }\n\n  return (\n    <div className='list-container' style ={bgStyle}>\n      <Success class={'success-' + successOnOff[0]} emoji={successOnOff[1]} runAmin={runAmin}/>\n      <Win winOnClick={winOnClick} winHide={screen}/>\n      <div className={\"list \" + listHide }>\n        {items.map((item,i) => (\n          <Toggle emoji={item} onOff={switchsState[i]} sendSwitchState={sendSwitchState} switchId={i} showAnim={showAnim}/>\n        ))}\n      </div>\n      <Sun status = {size}/>\n    </div>\n  );\n}\n\nfunction Footer(props) {\n  return (\n    <div className = 'footer'>\n      <p>Created with ‚ù§Ô∏è by <a href='http://www.dordesign.com' target='_blank'>Dor</a></p>\n    </div>\n  )\n}\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <List />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}